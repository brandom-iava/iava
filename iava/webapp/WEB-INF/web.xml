<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>iava web project</display-name>
	<context-param>
		<description>log4j是否感知web上下文</description>
		<param-name>log4jExposeWebAppRoot</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<description>日志配置文件动态刷新时间，单位毫秒</description>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>file:./config/iava/log4j.xml</param-value>
	</context-param>
	<context-param>
		<description>sysconfi.properties配置文件动态刷新时间，单位毫秒</description>
		<param-name>sysConfigRefTime</param-name>
		<param-value>60000</param-value>
	</context-param>
	<context-param>
		<param-name>sysConfigLocation</param-name>
		<param-value>file:./config/iava/sysconf.properties</param-value>
	</context-param>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:com/iava/config/spring-default.xml
		</param-value>
	</context-param>
	<context-param>
		<description>全局的错误重定义路径,在子局无配置的情况下会尝试取该路径</description>
		<param-name>errorRedirectUrl</param-name>
		<param-value>/error.html</param-value>
	</context-param>
	<context-param>
		<description></description>
		<param-name>webAppRootKey</param-name>
		<param-value>iava</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!-- <listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener> -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<filter>
        <filter-name>struts</filter-name>
        <filter-class>
            org.apache.struts2.dispatcher.FilterDispatcher
        </filter-class>
        <init-param>
            <param-name>config</param-name>
            <param-value>struts-default.xml,struts-plugin.xml,com/iava/config/struts.xml</param-value>
        </init-param>
    </filter>
	<filter-mapping>
        <filter-name>struts</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	<servlet>
		<servlet-name>myservice</servlet-name>
		<servlet-class>com.caucho.hessian.server.HessianServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<init-param>
			<param-name>service-class</param-name>
			<param-value>com.iava.opensource.hessian.MyServiceImpl</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>myservice</servlet-name>
		<url-pattern>/myservice</url-pattern>
	</servlet-mapping> 
	<servlet>
		<servlet-name>remoting</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>remoting</servlet-name>
		<url-pattern>/remoting/*</url-pattern>
	</servlet-mapping>  
	<!-- spring和hessian集成的另一种方法，这种方法不需要在WEB-INF下新建spring配置，但是需要在配置文件里定义个和servlet-name一样名字的bean
	<servlet>
	    <servlet-name>accountExporter</servlet-name>
	    <servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
	    <servlet-name>accountExporter</servlet-name>
	    <url-pattern>/remoting/AccountService</url-pattern>
	</servlet-mapping> -->
</web-app>
